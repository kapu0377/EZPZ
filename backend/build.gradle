plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.1.10'
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.1.10'
    id 'org.springframework.boot' version '3.3.12'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll("-Xjsr305=strict")
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.modelmapper:modelmapper:3.2.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'com.google.code.gson:gson:2.13.1'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    implementation 'com.google.cloud:google-cloud-vision:3.62.0'

    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    test {
        java.srcDirs = []
        kotlin.srcDirs = []
        resources.srcDirs = []
    }
}

test {
    enabled = false
}
